GET     /api/card-set                               controllers.CardSetController.listCardSets(page: Int, size: Int)
POST    /api/card-set                               controllers.CardSetController.create()
PUT     /api/card-set/:cardSetId                    controllers.CardSetController.update(cardSetId: Long)
GET     /api/card-set/:cardSetId                    controllers.CardSetController.get(cardSetId: Long)
DELETE  /api/card-set/:cardSetId                    controllers.CardSetController.removeCardSetById(cardSetId: Long)
GET     /api/card-set/:cardSetId/cards              controllers.CardSetController.listCards(cardSetId: Long, page: Int, size: Int)
GET     /api/card-set/:cardSetId/cards/learn        controllers.CardSetController.cardsToLearn(cardSetId: Long)
GET     /api/card-set/:cardSetId/cards/:cardIds     controllers.CardSetController.listCardsByIds(cardSetId: Long, cardIds: String)
DELETE  /api/card-set/:cardSetId/cards/:cardId      controllers.CardSetController.removeCardById(cardSetId: Long, cardId: Int)
POST    /api/card-set/:cardSetId/cards              controllers.CardSetController.createCard(cardSetId: Long)
PUT     /api/card-set/:cardSetId/cards              controllers.CardSetController.updateCard(cardSetId: Long)
POST    /api/card-set/cards/progress                controllers.CardSetController.progressCards()


GET     /api/config/app                controllers.ConfigController.appConfig()

POST     /auth/signIn               controllers.AuthController.signIn()
POST     /auth/signUp               controllers.AuthController.signUp()
POST     /auth/:provider            controllers.AuthController.authenticate(provider)

GET     /                                     controllers.Assets.at(path="/public/ui", file="index.html")
GET     /$file<.*(css|js)+.*>                 controllers.Assets.at(path="/public/ui", file)
GET     /*f                                   controllers.AssetsController.reRoteToRoot(path="/public/ui", file="index.html", f)
